---
defaults: &defaults
  working_directory: /go/src/github.com/nathandines/forge
  docker:
    - image: circleci/golang:latest

version: 2
jobs:
  build:
    <<: *defaults

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      - run: make deps

      - run: make lint

      # unit testing
      - run: mkdir -p "$TEST_RESULTS"
      - run: go get github.com/jstemmer/go-junit-report
      - run: |
          trap 'go-junit-report <"${TEST_RESULTS}/go-test.out" > "${TEST_RESULTS}/go-test-report.xml"' EXIT
          make test | tee "${TEST_RESULTS}/go-test.out"

      # smoke test
      - run: make
      - run: ./bin/forge --version

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

      - persist_to_workspace:
          root: bin
          paths:
            - '*'

  release:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: bin

      - run:
          name: Validate Tag Version
          command: |
            forge_version="$(./bin/forge --version | grep -Po 'v\d+(?:\.\d+){2}(?:-[a-z]+\d?)?$')"
            if [[ "$CIRCLE_TAG" != "$forge_version" ]]; then
              echo "Tag version \"${CIRCLE_TAG}\" does not match binary version \"${forge_version}\""
              exit 1
            fi
            mkdir release

      - run:
          name: Build - Linux (32-bit)
          environment:
            GOOS: linux
            GOARCH: '386'
          command: &build_cmd |
            make deps
            go build -v -o "release/forge_${CIRCLE_TAG}_${GOOS}_${GOARCH}${FILEEXT}"

      - run:
          name: Build - Linux (64-bit)
          environment:
            GOOS: linux
            GOARCH: amd64
          command: *build_cmd

      - run:
          name: Build - Windows (32-bit)
          environment:
            GOOS: windows
            GOARCH: '386'
            FILEEXT: .exe
          command: *build_cmd

      - run:
          name: Build - Windows (64-bit)
          environment:
            GOOS: windows
            GOARCH: amd64
            FILEEXT: .exe
          command: *build_cmd

      - run:
          name: Build - Darwin (64-bit)
          environment:
            GOOS: darwin
            GOARCH: amd64
          command: *build_cmd

      - run: go get github.com/tcnksm/ghr
      - run: |
          if (printf "$CIRCLE_TAG" | grep -Pq -- '-[a-z]+\d?$'); then
            PRERELEASE='-prerelease'
          fi
          ghr -u "$CIRCLE_PROJECT_USERNAME" -r "$CIRCLE_PROJECT_REPONAME" -replace "$PRERELEASE" "$CIRCLE_TAG" release

workflows:
  version: 2
  build-n-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^v\d+(?:\.\d+){2}(?:-[a-z]+\d?)?$/
            branches:
              ignore: /.*/
